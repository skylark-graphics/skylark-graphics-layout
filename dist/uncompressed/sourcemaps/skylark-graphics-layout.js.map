{"version":3,"sources":["skylark-graphics-layout.js"],"names":[],"mappingsfile":"../skylark-graphics-layout.js","sourcesContent":["define('skylark-graphics-layout/layout',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\t\r\n\tvar layout =  {\r\n\r\n\t  log2 : function (x) {\r\n\t    var n = 1, i = 0;\r\n\t    while (x > n) {\r\n\t      n <<= 1;\r\n\t      i++;\r\n\t    }\r\n\t    return i;\r\n\t  }\r\n\r\n\t};\r\n\r\n\r\n\treturn skylark.attach(\"graphics.layout\",layout);\r\n});\ndefine('skylark-graphics-layout/DisplayMode',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var DisplayMode = [\"none\", \"inline\", \"block\", \"listtem\", \"inlineblock\", \"tableRowGroup\", \"tablecell\", \"tablerow\"];\r\n\r\n    langx.mixin(DisplayMode,{\r\n        \"none\" : 0, \r\n        \"inline\" : 1, \r\n        \"block\" : 2, \r\n        \"listtem\" : 3, \r\n        \"inlineblock\" :4, \r\n        \"tableRowGroup\" : 5, \r\n        \"tablecell\" : 6, \r\n        \"tablerow\" : 7\r\n    });\r\n\r\n    DisplayMode.fromCss = function(s) {\r\n        switch (s) {\r\n            case \"none\":\r\n                return DisplayMode.none;\r\n            case \"inline\":\r\n                return DisplayMode.inline;\r\n            case \"block\":\r\n                return DisplayMode.block;\r\n            case \"list-item\":\r\n                return DisplayMode.listtem;\r\n            case \"inline-block\":\r\n                return DisplayMode.inlineblock;\r\n            case \"table-cell\":\r\n                return DisplayMode.tablecell;\r\n            case \"table-row\":\r\n                return DisplayMode.tablerow;\r\n            case \"table-row-group\":\r\n                return DisplayMode.tableRowGroup\r\n            default:\r\n                return undefined;\r\n        }\r\n    };\r\n    \r\n    DisplayMode.toCss = function(mode) {\r\n        switch (mode) {\r\n            case DisplayMode.none:\r\n                return \"none\";\r\n            case DisplayMode.inline:\r\n                return \"inline\";\r\n            case DisplayMode.block:\r\n                return \"block\";\r\n            case DisplayMode.listtem:\r\n                return \"list-item\";\r\n            case DisplayMode.inlineblock:\r\n                return \"inline-block\";\r\n            case DisplayMode.tablecell:\r\n                return \"table-cell\";\r\n            case DisplayMode.tablerow:\r\n                return \"table-row\";\r\n            case DisplayMode.tableRowGroup:\r\n                return \"table-row-group\";\r\n            default:\r\n                return undefined;\r\n        }\r\n    };\r\n\r\n    return layout.DisplayMode = DisplayMode;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/FloatMode',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar FloatMode = [\"none\", \"left\", \"right\"];\r\n\r\n\tlangx.mixin(FloatMode,{\r\n\t\t\"none\" : 0, \r\n\t\t\"left\" : 1, \r\n\t\t\"right\" : 2\r\n\t});\r\n\r\n\r\n\treturn layout.FloatMode = FloatMode;\r\n});\r\n\ndefine('skylark-graphics-layout/Flow',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar Flow = langx.klass({\r\n\t\t\r\n\t\t\"klassName\"\t:\t\"Flow\",\r\n\r\n\t\t\"display\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.display;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"float\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.float;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"position\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.position;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoCss : function(css) {\r\n\t\t\treturn Flow.toCss(this,css);\r\n\t\t},\r\n\t\t\r\n\t\t\"_construct\" : function(params){\r\n\t\t\tthis._ = {\r\n\t\t\t\tdisplay   : params.display,\r\n\t\t\t\tfloat \t  : params.float,\r\n\t\t\t\tposition  : params.position\r\n\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tFlow.fromPlain = function(o) {\r\n\t\treturn new Flow({\r\n\t\t\tdisplay  : o.display,\r\n\t\t\tfloat    : o.float,\r\n\t\t\tposition : o.position\r\n\t\t});\r\n\t};\r\n\r\n\tFlow.fromCss = Flow.fromPlain;\r\n\r\n\tFlow.toCss = function(flow,css) {\r\n        if (!css) {\r\n        \tcss = {};\r\n        }\r\n    \tif (flow.display) {\r\n        \tcss.display = DisplayMode.toCss(flow.display);\r\n    \t}\r\n    \tif (flow.repeat) {\r\n        \tcss.float = flow.float.toString();\r\n    \t}\r\n    \tif (flow.position) {\r\n        \tcss.position = flow.position.toString();\r\n    \t}\r\n\r\n        return css;\r\n\t};\r\n\r\n\treturn layout.Flow = Flow;\r\n\t\r\n});\t\r\n\ndefine('skylark-langx-numbers/Vector2',[\r\n\t\"./numbers\"\r\n] ,function(numbers) {\r\n\r\n\r\n\tfunction Vector2( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function ( minVal, maxVal ) {\r\n\r\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\r\n\treturn numbers.Vector2 = Vector2 ;\r\n});\r\n\ndefine('skylark-graphics-layout/Location',[\r\n    \"skylark-langx/langx\",\r\n\t\"skylark-langx-numbers/Vector2\",    \r\n    \"./layout\"\r\n],function(langx, Vector2,layout) {\r\n\r\n    var Location =  Vector2.inherit({\r\n\r\n        \"klassName\": \"Location\",\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this.x;\r\n            },\r\n\r\n            set : function(v) {\r\n            \tthis.x = v;\r\n            }\r\n\r\n        },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this.y;\r\n            },\r\n\r\n            set : function(v) {\r\n            \tthis.y = v;\r\n            }\r\n\r\n        }\r\n\t});\r\n\r\n\treturn layout.Location = Location;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/Margin',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d*\\D*\\s*/g;\r\n\r\n    var Margin = langx.klass({\r\n\r\n        \"klassName\": \"Margin\",\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this._.left;\r\n            }\r\n       },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this._.top;\r\n            }\r\n        },\r\n\r\n        \"right\": {\r\n            get : function() {\r\n                return this._.right;\r\n            }\r\n        },\r\n\r\n        \"bottom\": {\r\n            get : function() {\r\n                return this._.bottom;\r\n            }\r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._ = {\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            };\r\n        },\r\n        \r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new Padding(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"top\"  : this.top,\r\n                \"right\"  : this.right,\r\n                \"left\"  : this.left,\r\n                \"bottom\"  : this.bottom\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Padding.toCss(this,css);\r\n        },\r\n\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.left.toString(),\r\n                t = this.top.toString(),\r\n                r = this.right.toString(),\r\n                b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n        \r\n        \"_construct\"    :   function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l === undefined) {\r\n                    if (r === undefined) {\r\n                        if (t === undefined) {\r\n                            //()\r\n                            b=l=r=t=0;\r\n                        } else {\r\n                            // /*Number*/a\r\n                            b=l=r=t;\r\n                        }\r\n                    } else {\r\n                        // /*Number*/tb,/*Number*/lr\r\n                        b = t;\r\n                        l = r;\r\n                    }\r\n\r\n                } else {\r\n                    // /*Number*/t,/*Number*/lr,/*Number*/b \r\n                    b = l;\r\n                    l = r;\r\n                } \r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    Object.mixin(Margin, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new Margin(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new Margin(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a.length;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n            }\r\n            return new Margin(t,r,l,b);\r\n        },\r\n\r\n        Zero: new Margin(0)\r\n    });\r\n\r\n    Margin.fromCss = function(css) {\r\n       return new Margin(\r\n                    css.marginTop,\r\n                    css.marginRight,\r\n                    css.marginLeft,\r\n                    css.marginBottom\r\n                );\r\n    };\r\n\r\n    Margin.toCss = function(margin,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        css.marginTop = margin.top.toString();\r\n        css.marginRight = margin.right.toString();\r\n        css.marginLeft = margin.left.toString();\r\n        css.marginBottom = margin.bottom.toString();\r\n\r\n        return css;\r\n    };\r\n\r\n\r\n    return Margin;\r\n});\r\n\ndefine('skylark-graphics-layout/MeasureType',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar MeasureType = [\"auto\",\"inherit\",\"initial\",\"mid\",\"min\",\"max\",\"none\",\"percent\",\"unit\"];\r\n\t\r\n\tlangx.mixin(MeasureType,{\r\n\t\t\"auto\" : 0,\r\n\t\t\"inherit\" : 1,\r\n\t\t\"initial\" : 2,\r\n\t\t\"mid\" : 3,\r\n\t\t\"min\" : 4,\r\n\t\t\"max\" : 5,\r\n\t\t\"none\" : 6,\r\n\t\t\"percent\" : 7,\r\n\t\t\"unit\" : 8\r\n\t});\r\n\r\n\treturn layout.MeasureType = MeasureType;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/MeasureUnit',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar MeasureUnit = [\"em\", \"ex\", \"px\", \"pt\", \"pc\", \"cm\", \"mm\", \"in\"];\r\n\r\n\tlangx.mixin(MeasureUnit,{\r\n\t\t\"em\" : 0, \r\n\t\t\"ex\" : 1, \r\n\t\t\"px\" : 2, \r\n\t\t\"pt\" : 3, \r\n\t\t\"pc\" : 4, \r\n\t\t\"cm\" : 5, \r\n\t\t\"mm\" : 6, \r\n\t\t\"in\" : 7\r\n\t});\r\n\r\n\treturn layout.MeasureUnit = MeasureUnit;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/MeasureValue',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\",\r\n\t\"./MeasureType\",\r\n\t\"./MeasureUnit\"\r\n],function(langx,layout,MeasureType,MeasureUnit) {\r\n\r\n\tvar MeasureValue = langx.klass({\r\n\t\t\"klassName\"\t:\t\"MeasureValue\",\r\n\r\n\t\t\"mtype\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.mtype;\r\n\t\t\t},\r\n\t\t\tset : function(t) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t_.mtype = t;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.auto :\r\n\t\t\t\t\t\t_.unit = null;\r\n\t\t\t\t\t\t_.value = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\t\t_.unit = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"unit\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.unit;\r\n\t\t\t},\r\n\r\n\t\t\tset : function(u) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.mtype;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\t\t_.unit = u;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"value\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.value;\r\n\t\t\t},\r\n\t\t\tset : function(v) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.mtype;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\t\t_.value = v;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new MeasureValue(_.mtype,_.unit,_.value);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*Measure*/m) {\r\n\t\t\treturn !m || m.mtype != this.mtype || m.unit != this.unit || m.value != this.value;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Measure*/m){\r\n\t\t\treturn  !this.notEqual(m);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(){\r\n\t\t\tswitch (this.mtype) {\r\n\t\t\t\tcase MeasureType.auto :\r\n\t\t\t\tcase MeasureType.min :\r\n\t\t\t\tcase MeasureType.max :\r\n\t\t\t\tcase MeasureType.mid :\r\n\t\t\t\t\treturn this.mtype.toString();\r\n\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\treturn this.value + this.unit.toString();\r\n\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\treturn this.value + \"%\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\t\r\n\t\t\r\n\t\t\"_construct\"\t: function(type,value,unit){\r\n\t\t\tvar props = {};\r\n\t\t\tif (type != undefined) {\r\n\t\t\t\tprops.mtype = type;\r\n\t\t\t}\r\n\t\t\tif (value != undefined) {\r\n\t\t\t\tprops.value = value;\r\n\t\t\t}\r\n\t\t\tif (unit != undefined) {\r\n\t\t\t\tprops.unit = unit;\r\n\t\t\t}\r\n\t\t\tthis._ = props;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tMeasureValue.fromNumber = function(n) {\r\n        return new MeasureValue(MeasureType.unit,n,MeasureUnit.px);\r\n\t};\r\n\t\r\n\tMeasureValue.fromString = function(s) {\r\n\t\tif (s==\"auto\"){\r\n\t\t\treturn MeasureValue.auto;\r\n\t\t}\r\n\r\n\t\tif (s==\"min\"){\r\n\t\t\treturn MeasureValue.min;\r\n\t\t}\r\n\r\n\t\tif (s==\"max\"){\r\n\t\t\treturn MeasureValue.max;\r\n\t\t}\r\n\r\n\t\tif (s==\"mid\"){\r\n\t\t\treturn MeasureValue.mid;\r\n\t\t}\r\n\r\n\t\tvar units = MeasureUnit.map(function(item){\r\n\t\t\t\treturn item.getText();\r\n\t\t\t}).concat(\"%\"),\r\n\t\t\ttype,\r\n\t\t\tvalue,\r\n\t\t\tunit;\r\n        for (var i = 0; i < units.length; i++) {\r\n            if (s.indexOf(units[i]) != -1) {\r\n                value = parseInt(s.substring(0, s.length - units[i].length),10);\r\n                if (units[i] == \"%\") {\r\n                \ttype = MeasureType.percent;\r\n                } else {\r\n                \ttype = MeasureType.unit;\r\n                \tunit = MeasureUnit.fromString(units[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return new MeasureValue(type,value,unit);\r\n\t};\r\n\r\n\tMeasureValue.fromPlain = function(o) {\r\n\t\treturn new MeasureValue(o.mtype,o.value,o.unit);\r\n\t};\r\n\r\n\tMeasureValue.fromArray = function(a) {\r\n\t\treturn new MeasureValue(a[0],a.length>1?a[1]:\"undefined\",a.length>1?a[2]:undefined);\r\n\t};\r\n\r\n\tMeasureValue.auto = new MeasureValue(MeasureType.auto);\r\n\tMeasureValue.mid = new MeasureValue(MeasureType.mid);\r\n\tMeasureValue.min = new MeasureValue(MeasureType.min);\r\n\tMeasureValue.max = new MeasureValue(MeasureType.max);\r\n\r\n\treturn layout.MeasureValue = MeasureValue;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/Padding',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d*\\D*\\s*/g;\r\n\r\n    var Padding = langx.klass({\r\n        \"klassName\": \"Padding\",\r\n\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this._.left;\r\n            }\r\n       },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this._.top;\r\n            }\r\n        },\r\n\r\n        \"right\": {\r\n            get : function() {\r\n                return this._.right;\r\n            }\r\n        },\r\n\r\n        \"bottom\": {\r\n            get : function() {\r\n                return this._.bottom;\r\n            }\r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._ = {\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            };\r\n        },\r\n        \r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new Padding(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"top\"  : this.top,\r\n                \"right\"  : this.right,\r\n                \"left\"  : this.left,\r\n                \"bottom\"  : this.bottom\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Padding.toCss(this,css);\r\n        },\r\n\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.left.toString(),\r\n                t = this.top.toString(),\r\n                r = this.right.toString(),\r\n                b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n\r\n        \"_construct\"    :   function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l === undefined) {\r\n                    if (r === undefined) {\r\n                        if (t === undefined) {\r\n                            //()\r\n                            b=l=r=t=0;\r\n                        } else {\r\n                            // /*Number*/a\r\n                            b=l=r=t;\r\n                        }\r\n                    } else {\r\n                        // /*Number*/tb,/*Number*/lr\r\n                        b = t;\r\n                        l = r;\r\n                    }\r\n\r\n                } else {\r\n                    // /*Number*/t,/*Number*/lr,/*Number*/b \r\n                    b = l;\r\n                    l = r;\r\n                } \r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    langx.mixin(Padding, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new Padding(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new Padding(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a.length;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n            }\r\n            return new Padding(t,r,l,b);\r\n        },\r\n\r\n        Zero: new Padding(0)\r\n    });\r\n\r\n    Padding.fromCss = function(css) {\r\n       return new Padding(\r\n                    css.paddingTop,\r\n                    css.paddingRight,\r\n                    css.paddingLeft,\r\n                    css.paddingBottom\r\n                );\r\n    };\r\n\r\n    Padding.toCss = function(padding,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (padding) {\r\n            css.paddingTop = padding.top.toString();\r\n            css.paddingRight = padding.right.toString();\r\n            css.paddingLeft = padding.left.toString();\r\n            css.paddingBottom = padding.bottom.toString();\r\n        }\r\n\r\n        return css;\r\n    };\r\n\r\n    return Padding;\r\n});\r\n\ndefine('skylark-graphics-layout/PositionMode',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var PositionMode = [\"absolute\", \"fixed\", \"relative\", \"static\"];\r\n\r\n    langx.mixin(PositionMode,{\r\n    \t\"absolute\" : 0, \r\n    \t\"fixed\" : 1, \r\n    \t\"relative\" : 2, \r\n    \t\"static\" : 3\r\n    });\r\n\r\n    return layout.PositionMode = PositionMode;\r\n});\r\n\ndefine('skylark-graphics-layout/Restriction',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var Restriction = langx.klass({\r\n        \"klassName\": \"Restriction\",\r\n\r\n\r\n        \"maxHeight\": {\r\n            get : function() {\r\n                return this._.maxHeight;\r\n            }\r\n        },\r\n        \"maxWidth\": {\r\n            get : function() {\r\n                return this._.maxWidth;\r\n            }\r\n        },\r\n        \"minHeight\": {\r\n            get : function() {\r\n                return this._.minHeight;\r\n            }\r\n        },\r\n        \"minWidth\": {\r\n            get : function() {\r\n                return this._.minWidth;\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Restriction.toCss(this,css);\r\n        },\r\n       toString: function(){\r\n            var minWidth  = this.minWidth,\r\n                minHeight = this.minHeight,\r\n                maxWidth = this.maxWidth,\r\n                maxHeight = this.maxHeight;\r\n               \r\n            return minWidth.toString() + \" \" + \r\n                   minHeight.toString() + \" \" +\r\n                   maxWidth.toString() + \" \" + \r\n                   maxHeight.toString();\r\n        },\r\n        \"_consturct\" :   function(minWidth, minHeight,maxWidth, maxHeight) {\r\n            this._ = {\r\n                \"minWidth\": minWidth,\r\n                \"minHeight\": minHeight,\r\n                \"maxWidth\": maxWidth,\r\n                \"maxHeight\": maxHeight\r\n            };\r\n        }\r\n\r\n    });\r\n\r\n\tRestriction.fromString = function(s) {\r\n\t\tvar a = s.split(\" \");\r\n        return Restriction.fromArray(a);\r\n\t};\r\n\r\n\tRestriction.fromPlain = function(o) {\r\n        var minWidth = o.minWidth,\r\n            minHeight = o.minHeight,\r\n            maxWidth = o.maxWidth,\r\n            maxHeight = o.maxHeight;\r\n        minWidth = minWidth ? minWidth : MeasureValue.none;\r\n        minHeight = minHeight ? minHeight : MeasureValue.none;\r\n        maxWidth = maxWidth ? maxWidth : MeasureValue.none;\r\n        maxHeight = maxHeight ? maxHeight : MeasureValue.none;\r\n\r\n\t\treturn new Restriction(minWidth, minHeight,maxWidth, maxHeight);\r\n\t};\r\n\r\n\tRestriction.fromArray = function(a) {\r\n\t\treturn new Restriction(a.length>0?a[0]:MeasureValue.none,\r\n                               a.length>1?a[1]:MeasureValue.none,\r\n                               a.length>2?a[2]:MeasureValue.none,\r\n                               a.length>3?a[3]:MeasureValue.none\r\n                    );\r\n\t};\r\n\r\n    Restriction.fromCss = function(css) {\r\n        return Restriction.fromPlain(css);\r\n    };\r\n    Restriction.toCss = function(restriction,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (restriction) {\r\n            var maxWidth = restriction.maxWidth,\r\n                maxHeight = restriction.maxHeight,\r\n                minWidth = restriction.minWidth,\r\n                minHeight = restriction.minHeight;\r\n\r\n            if (maxWidth) {\r\n                css.maxWidth = maxWidth.type === MeasureType.none ? \"\" : maxWidth.toString();\r\n            }\r\n            if (maxHeight) {\r\n                css.maxHeight = maxHeight.type === MeasureType.none ? \"\" :maxHeight.toString();\r\n            }\r\n\r\n            if (minWidth) {\r\n                css.minWidth = minWidth.type === MeasureType.none ? \"\" :minWidth.toString();\r\n            }\r\n            if (minHeight) {\r\n                css.minHeight = minHeight.type === MeasureType.none ? \"\" :minHeight.toString();\r\n            }\r\n        }\r\n\r\n        return css;\r\n    };    \r\n\r\n    Restriction.none = new Restriction(\r\n        MeasureValue.none,\r\n        MeasureValue.none,\r\n        MeasureValue.none,\r\n        MeasureValue.none\r\n    );\r\n    return Restriction;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/Size',[\r\n    \"skylark-langx/langx\",\r\n\t\"skylark-langx-numbers/Vector2\",    \r\n    \"./layout\"\r\n],function(langx, Vector2,layout) {\r\n\r\n    var Size = Vector2.inherit({\r\n        \"klassName\": \"Size\",\r\n\t\t// width: Number\r\n\t\t//\t\tThe width of the default rectangle, value 100.\r\n\t\t\"width\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.width;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// height: Number\r\n\t\t//\t\tThe height of the default rectangle, value 100.\r\n\t\t\"height\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.height;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Size(_.width,_.height);\r\n\t\t},\r\n\r\n        \"toArray\" : function() {\r\n            return [this.width,this.height];\r\n        },\r\n\r\n        \"toPlain\" : function() {\r\n            return {\r\n                \"width\"  : this.width,\r\n                \"height\"  : this.height\r\n            };\r\n        },\r\n        \"toString\": function() {\r\n        \treturn this.width +\",\" + this.height;\r\n        },\r\n\r\n        \"init\" : function(width,height) {\r\n        \tvar _ = this._ = {};\r\n        \t_.width = width || 0;\r\n        \t_.height = height || 0;\r\n        }\r\n\t});\r\n\t\r\n\tSize.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Size(parseFloat(a[0]),parseFloat(a[1]));\r\n\t};\r\n\r\n\tSize.fromPlain = function(o) {\r\n\t\treturn new Size(o.w || o.width,o.h || o.height);\r\n\t};\r\n\r\n\tSize.fromArray = function(a) {\r\n\t\treturn new Size(a[0],a[1]);\r\n\t};\r\n\r\n\tSize.Zero = new Size(0,0);\r\n\t\r\n\treturn  layout.Size = Size;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/main',[\r\n    \"./layout\",\r\n    \"./DisplayMode\",\r\n    \"./FloatMode\",\r\n    \"./Flow\",\r\n    \"./Location\",\r\n    \"./Margin\",\r\n    \"./MeasureType\",\r\n    \"./MeasureUnit\",\r\n    \"./MeasureValue\",\r\n    \"./Padding\",\r\n    \"./PositionMode\",\r\n    \"./Restriction\",\r\n    \"./Size\"\r\n], function(layout) {\r\n\r\n\treturn layout;\r\n});\ndefine('skylark-graphics-layout', ['skylark-graphics-layout/main'], function (main) { return main; });\n\n"]}