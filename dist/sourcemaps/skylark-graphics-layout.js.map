{"version":3,"sources":["skylark-graphics-layout.js"],"names":["define","skylark","langx","attach","log2","x","n","i","layout","AnchorStyle","mixin","none","left","top","right","bottom","numerics","Vector2","y","this","Object","defineProperties","prototype","width","get","set","value","height","assign","setScalar","scalar","setX","setY","clone","constructor","copy","v","add","w","undefined","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","rotateAround","center","c","cos","sin","Location","inherit","klassName","Size","_","toPlain","toString","init","fromString","split","parseFloat","fromPlain","o","h","Zero","Bounds","klass","bounds","box","radius","leftTop","leftBottom","rightTop","rightBottom","size","move","containPoint","p","isEmpty","notEqual","r","equal","isIntersect","x2","y2","width2","height2","x1","y1","width1","height1","intersect","unite","l","t","Direction","leftRight","rightLeft","topDown","bottomUp","DisplayMode","inline","block","listtem","inlineblock","tableRowGroup","tablecell","tablerow","fromCss","toCss","mode","FloatMode","Flow","display","float","position","css","_construct","params","flow","repeat","HorzAlign","stretch","_WIDTHS_R","Margin","getAll","setAll","Padding","equale","target","match","len","marginTop","marginRight","marginLeft","marginBottom","margin","paddingTop","paddingRight","paddingLeft","paddingBottom","padding","PositionMode","absolute","fixed","relative","static","Restriction","maxHeight","maxWidth","minHeight","minWidth","_consturct","MeasureValue","restriction","type","MeasureType","Alignment","main"],"mappings":"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","file":"../skylark-graphics-layout.js","sourcesContent":["define('skylark-graphics-layout/layout',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\t\r\n\tvar layout =  {\r\n\r\n\t  log2 : function (x) {\r\n\t    var n = 1, i = 0;\r\n\t    while (x > n) {\r\n\t      n <<= 1;\r\n\t      i++;\r\n\t    }\r\n\t    return i;\r\n\t  }\r\n\r\n\t};\r\n\r\n\r\n\treturn skylark.attach(\"graphics.layout\",layout);\r\n});\ndefine('skylark-graphics-layout/AnchorStyle',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar AnchorStyle = [\"none\", \"left\", \"top\", \"right\", \"bottom\"];\r\n\t\r\n\tlangx.mixin(AnchorStyle,{\r\n\t\t\"none\" : 0, \r\n\t\t\"left\" : 1, \r\n\t\t\"top\" : 2, \r\n\t\t\"right\" : 3, \r\n\t\t\"bottom\" : 4\r\n\t});\r\n\r\n\treturn layout.AnchorStyle = AnchorStyle;\r\n\r\n});\r\n\ndefine('skylark-langx-numerics/Vector2',[\r\n\t\"./numerics\"\r\n] ,function(numerics) {\r\n\r\n\r\n\tfunction Vector2( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function ( minVal, maxVal ) {\r\n\r\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\r\n\treturn numerics.Vector2 = Vector2 ;\r\n});\r\n\ndefine('skylark-graphics-layout/Location',[\r\n    \"skylark-langx/langx\",\r\n\t\"skylark-langx-numerics/Vector2\",    \r\n    \"./layout\"\r\n],function(langx, Vector2,layout) {\r\n\r\n    var Location =  Vector2.inherit({\r\n\r\n        \"klassName\": \"Location\",\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this.x;\r\n            },\r\n\r\n            set : function(v) {\r\n            \tthis.x = v;\r\n            }\r\n\r\n        },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this.y;\r\n            },\r\n\r\n            set : function(v) {\r\n            \tthis.y = v;\r\n            }\r\n\r\n        }\r\n\t});\r\n\r\n\treturn layout.Location = Location;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/Size',[\r\n    \"skylark-langx/langx\",\r\n\t\"skylark-langx-numerics/Vector2\",    \r\n    \"./layout\"\r\n],function(langx, Vector2,layout) {\r\n\r\n    var Size = Vector2.inherit({\r\n        \"klassName\": \"Size\",\r\n\t\t// width: Number\r\n\t\t//\t\tThe width of the default rectangle, value 100.\r\n\t\t\"width\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.width;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// height: Number\r\n\t\t//\t\tThe height of the default rectangle, value 100.\r\n\t\t\"height\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.height;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Size(_.width,_.height);\r\n\t\t},\r\n\r\n        \"toArray\" : function() {\r\n            return [this.width,this.height];\r\n        },\r\n\r\n        \"toPlain\" : function() {\r\n            return {\r\n                \"width\"  : this.width,\r\n                \"height\"  : this.height\r\n            };\r\n        },\r\n        \"toString\": function() {\r\n        \treturn this.width +\",\" + this.height;\r\n        },\r\n\r\n        \"init\" : function(width,height) {\r\n        \tvar _ = this._ = {};\r\n        \t_.width = width || 0;\r\n        \t_.height = height || 0;\r\n        }\r\n\t});\r\n\t\r\n\tSize.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Size(parseFloat(a[0]),parseFloat(a[1]));\r\n\t};\r\n\r\n\tSize.fromPlain = function(o) {\r\n\t\treturn new Size(o.w || o.width,o.h || o.height);\r\n\t};\r\n\r\n\tSize.fromArray = function(a) {\r\n\t\treturn new Size(a[0],a[1]);\r\n\t};\r\n\r\n\tSize.Zero = new Size(0,0);\r\n\t\r\n\treturn  layout.Size = Size;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/Bounds',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\",\r\n    \"./Location\",\r\n    \"./Size\"\r\n],function(langx,layout,Location,Size) {\r\n\r\n    var Bounds = langx.klass({\r\n        \"klassName\": \"Bounds\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n                var \r\n                    _ = this._,\r\n                    box = {\r\n                    x: _.x,\r\n                    y: this.y,\r\n                    width: _.width,\r\n                    height: _.height\r\n                };\r\n                return box;\r\n            }\r\n        },\r\n       \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n        // width: Number\r\n        //\t\tThe width of the default rectangle, value 100.\r\n        \"width\": {\r\n            get : function() {\r\n                return this._.width;\r\n            }\r\n        },\r\n        // height: Number\r\n        //\t\tThe height of the default rectangle, value 100.\r\n        \"height\": {\r\n            get : function() {\r\n                return this._.height;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe corner radius for the default rectangle, value 0.\r\n        \"radius\": {\r\n            get : function() {\r\n                return this._.radius;\r\n            }\r\n        },\r\n        \"leftTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Location(_.x, _.y);\r\n            }\r\n        },\r\n        \"leftBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Location(_.x, _.y + _.height);\r\n            }\r\n        },\r\n        \"rightTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Location(_.x + _.width, _.y);\r\n            }\r\n        },\r\n        \"rightBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Location(_.x + _.width, _.y + _.height);\r\n            }\r\n        },\r\n\r\n        \"size\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Size(_.width, _.height);\r\n            }\r\n        },\r\n\r\n        \"move\": function(dx, dy) {\r\n            var _ = this._;\r\n            return new Bounds(_.x + dx,_.y + dy,_.width,_.height,_.radius);\r\n        },\r\n\r\n        \"containPoint\": function(x,y) {\r\n            // support function(p)\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\r\n            return (x >= _.x) && (x < _.x + _.width) && (y >= _.y) && (y < _.y + _.height);\r\n        },\r\n\r\n\t\t\"isEmpty\"\t:\tfunction(){\r\n\t\t\treturn this.width <=0 || this.height<=0;\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*Bounds*/r) {\r\n\t\t\treturn !r || r.x != this.x || r.y != this.y || r.width != this.width || r.height != this.height || r.radius != this.radius;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Bounds*/r){\r\n\t\t\treturn  !this.notEqual(r);\r\n\t\t},\r\n\t\t\r\n\t\t\"isIntersect\"\t:function(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t    return (Math.min(x1 + width1, x2 + width2) - (x1 > x2 ? x1 : x2)) > 0 &&\r\n\t\t           (Math.min(y1 + height1, y2 + height2) - (y1 > y2 ? y1 : y2)) > 0;\r\n\t\t},\r\n\t\t\r\n\t\t\"intersect\"\t:\tfunction(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t    return (Math.min(x1 + width1, x2 + width2) - (x1 > x2 ? x1 : x2)) > 0 &&\r\n\t\t           (Math.min(y1 + height1, y2 + height2) - (y1 > y2 ? y1 : y2)) > 0;\r\n\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\"unite\"\t: function(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t\tvar x = x1 < x2 ? x1 : x2,\r\n\t\t\t\ty = y1 < y2 ? y1 : y2,\r\n\t\t\t\twidth  = Math.max(x1 + width1, x2 + width2) - x;\r\n\t\t\t\theight = Math.max(y1 + height1, y2 + height2) - y;\r\n\t\t    \r\n\t\t    return new Bounds(x,y,width,height);\r\n\t\t},\r\n\t\t\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Bounds(_.x,_.y,_.width,_.height,_.radius);\r\n\t\t},\r\n\r\n        \"init\" : function(x, y, width, height, radius) {\r\n            var _ = this._ = {};\r\n            _.x = x || 0;\r\n            _.y = y || 0;\r\n            _.width = width || 0;\r\n            _.height = height || 0;\r\n            _.radius = radius || 0;\r\n        }\r\n    });\r\n\r\n\r\n\tBounds.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Bounds(parseFloat(a[0]),parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));\r\n\t};\r\n\r\n\tBounds.fromPlain = function(o) {\r\n\t\treturn new Bounds(o.x || o.l,o.y || o.t, o.w || o.width,o.h || o.height);\r\n\t};\r\n\r\n\tBounds.fromArray = function(a) {\r\n\t\treturn new Bounds(a[0],a[1],a[2],a[3]);\r\n\t};\r\n\t\r\n\tBounds.Zero = new Bounds(0,0,0,0);\r\n\t\r\n\r\n\treturn layout.Bounds = Bounds;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/Direction',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\t\r\n\tvar Direction = [\"leftRight\",\"rightLeft\",\"topDown\",\"bottomUp\"];\r\n\r\n\tlangx.mixin(Direction,{\r\n\t\t\"leftRight\" : 0,\r\n\t\t\"rightLeft\" : 1,\r\n\t\t\"topDown\" : 2,\r\n\t\t\"bottomUp\" : 3\r\n\t});\r\n\r\n\treturn layout.Direction = Direction;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/DisplayMode',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var DisplayMode = [\"none\", \"inline\", \"block\", \"listtem\", \"inlineblock\", \"tableRowGroup\", \"tablecell\", \"tablerow\"];\r\n\r\n    langx.mixin(DisplayMode,{\r\n        \"none\" : 0, \r\n        \"inline\" : 1, \r\n        \"block\" : 2, \r\n        \"listtem\" : 3, \r\n        \"inlineblock\" :4, \r\n        \"tableRowGroup\" : 5, \r\n        \"tablecell\" : 6, \r\n        \"tablerow\" : 7\r\n    });\r\n\r\n    DisplayMode.fromCss = function(s) {\r\n        switch (s) {\r\n            case \"none\":\r\n                return DisplayMode.none;\r\n            case \"inline\":\r\n                return DisplayMode.inline;\r\n            case \"block\":\r\n                return DisplayMode.block;\r\n            case \"list-item\":\r\n                return DisplayMode.listtem;\r\n            case \"inline-block\":\r\n                return DisplayMode.inlineblock;\r\n            case \"table-cell\":\r\n                return DisplayMode.tablecell;\r\n            case \"table-row\":\r\n                return DisplayMode.tablerow;\r\n            case \"table-row-group\":\r\n                return DisplayMode.tableRowGroup\r\n            default:\r\n                return undefined;\r\n        }\r\n    };\r\n    \r\n    DisplayMode.toCss = function(mode) {\r\n        switch (mode) {\r\n            case DisplayMode.none:\r\n                return \"none\";\r\n            case DisplayMode.inline:\r\n                return \"inline\";\r\n            case DisplayMode.block:\r\n                return \"block\";\r\n            case DisplayMode.listtem:\r\n                return \"list-item\";\r\n            case DisplayMode.inlineblock:\r\n                return \"inline-block\";\r\n            case DisplayMode.tablecell:\r\n                return \"table-cell\";\r\n            case DisplayMode.tablerow:\r\n                return \"table-row\";\r\n            case DisplayMode.tableRowGroup:\r\n                return \"table-row-group\";\r\n            default:\r\n                return undefined;\r\n        }\r\n    };\r\n\r\n    return layout.DisplayMode = DisplayMode;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/FloatMode',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar FloatMode = [\"none\", \"left\", \"right\"];\r\n\r\n\tlangx.mixin(FloatMode,{\r\n\t\t\"none\" : 0, \r\n\t\t\"left\" : 1, \r\n\t\t\"right\" : 2\r\n\t});\r\n\r\n\r\n\treturn layout.FloatMode = FloatMode;\r\n});\r\n\ndefine('skylark-graphics-layout/Flow',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar Flow = langx.klass({\r\n\t\t\r\n\t\t\"klassName\"\t:\t\"Flow\",\r\n\r\n\t\t\"display\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.display;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"float\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.float;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"position\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.position;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoCss : function(css) {\r\n\t\t\treturn Flow.toCss(this,css);\r\n\t\t},\r\n\t\t\r\n\t\t\"_construct\" : function(params){\r\n\t\t\tthis._ = {\r\n\t\t\t\tdisplay   : params.display,\r\n\t\t\t\tfloat \t  : params.float,\r\n\t\t\t\tposition  : params.position\r\n\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tFlow.fromPlain = function(o) {\r\n\t\treturn new Flow({\r\n\t\t\tdisplay  : o.display,\r\n\t\t\tfloat    : o.float,\r\n\t\t\tposition : o.position\r\n\t\t});\r\n\t};\r\n\r\n\tFlow.fromCss = Flow.fromPlain;\r\n\r\n\tFlow.toCss = function(flow,css) {\r\n        if (!css) {\r\n        \tcss = {};\r\n        }\r\n    \tif (flow.display) {\r\n        \tcss.display = DisplayMode.toCss(flow.display);\r\n    \t}\r\n    \tif (flow.repeat) {\r\n        \tcss.float = flow.float.toString();\r\n    \t}\r\n    \tif (flow.position) {\r\n        \tcss.position = flow.position.toString();\r\n    \t}\r\n\r\n        return css;\r\n\t};\r\n\r\n\treturn layout.Flow = Flow;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/HorzAlign',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n\t\r\n\tvar HorzAlign = [\"left\",\"center\",\"right\",\"stretch\"];\r\n\t\r\n\tlangx.mixin(HorzAlign,{\r\n\t\t\"left\" : 0,\r\n\t\t\"center\": 1 ,\r\n\t\t\"right\" : 2,\r\n\t\t\"stretch\" : 3\r\n\t});\r\n\t\r\n\r\n\treturn layout.HorzAlign = HorzAlign;\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/Margin',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d*\\D*\\s*/g;\r\n\r\n    var Margin = langx.klass({\r\n\r\n        \"klassName\": \"Margin\",\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this._.left;\r\n            }\r\n       },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this._.top;\r\n            }\r\n        },\r\n\r\n        \"right\": {\r\n            get : function() {\r\n                return this._.right;\r\n            }\r\n        },\r\n\r\n        \"bottom\": {\r\n            get : function() {\r\n                return this._.bottom;\r\n            }\r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._ = {\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            };\r\n        },\r\n        \r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new Padding(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"top\"  : this.top,\r\n                \"right\"  : this.right,\r\n                \"left\"  : this.left,\r\n                \"bottom\"  : this.bottom\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Padding.toCss(this,css);\r\n        },\r\n\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.left.toString(),\r\n                t = this.top.toString(),\r\n                r = this.right.toString(),\r\n                b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n        \r\n        \"_construct\"    :   function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l === undefined) {\r\n                    if (r === undefined) {\r\n                        if (t === undefined) {\r\n                            //()\r\n                            b=l=r=t=0;\r\n                        } else {\r\n                            // /*Number*/a\r\n                            b=l=r=t;\r\n                        }\r\n                    } else {\r\n                        // /*Number*/tb,/*Number*/lr\r\n                        b = t;\r\n                        l = r;\r\n                    }\r\n\r\n                } else {\r\n                    // /*Number*/t,/*Number*/lr,/*Number*/b \r\n                    b = l;\r\n                    l = r;\r\n                } \r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    Object.mixin(Margin, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new Margin(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new Margin(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a.length;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n            }\r\n            return new Margin(t,r,l,b);\r\n        },\r\n\r\n        Zero: new Margin(0)\r\n    });\r\n\r\n    Margin.fromCss = function(css) {\r\n       return new Margin(\r\n                    css.marginTop,\r\n                    css.marginRight,\r\n                    css.marginLeft,\r\n                    css.marginBottom\r\n                );\r\n    };\r\n\r\n    Margin.toCss = function(margin,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        css.marginTop = margin.top.toString();\r\n        css.marginRight = margin.right.toString();\r\n        css.marginLeft = margin.left.toString();\r\n        css.marginBottom = margin.bottom.toString();\r\n\r\n        return css;\r\n    };\r\n\r\n\r\n    return Margin;\r\n});\r\n\ndefine('skylark-graphics-layout/Padding',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d*\\D*\\s*/g;\r\n\r\n    var Padding = langx.klass({\r\n        \"klassName\": \"Padding\",\r\n\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this._.left;\r\n            }\r\n       },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this._.top;\r\n            }\r\n        },\r\n\r\n        \"right\": {\r\n            get : function() {\r\n                return this._.right;\r\n            }\r\n        },\r\n\r\n        \"bottom\": {\r\n            get : function() {\r\n                return this._.bottom;\r\n            }\r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._ = {\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            };\r\n        },\r\n        \r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new Padding(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"top\"  : this.top,\r\n                \"right\"  : this.right,\r\n                \"left\"  : this.left,\r\n                \"bottom\"  : this.bottom\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Padding.toCss(this,css);\r\n        },\r\n\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.left.toString(),\r\n                t = this.top.toString(),\r\n                r = this.right.toString(),\r\n                b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n\r\n        \"_construct\"    :   function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l === undefined) {\r\n                    if (r === undefined) {\r\n                        if (t === undefined) {\r\n                            //()\r\n                            b=l=r=t=0;\r\n                        } else {\r\n                            // /*Number*/a\r\n                            b=l=r=t;\r\n                        }\r\n                    } else {\r\n                        // /*Number*/tb,/*Number*/lr\r\n                        b = t;\r\n                        l = r;\r\n                    }\r\n\r\n                } else {\r\n                    // /*Number*/t,/*Number*/lr,/*Number*/b \r\n                    b = l;\r\n                    l = r;\r\n                } \r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    langx.mixin(Padding, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new Padding(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new Padding(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a.length;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n            }\r\n            return new Padding(t,r,l,b);\r\n        },\r\n\r\n        Zero: new Padding(0)\r\n    });\r\n\r\n    Padding.fromCss = function(css) {\r\n       return new Padding(\r\n                    css.paddingTop,\r\n                    css.paddingRight,\r\n                    css.paddingLeft,\r\n                    css.paddingBottom\r\n                );\r\n    };\r\n\r\n    Padding.toCss = function(padding,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (padding) {\r\n            css.paddingTop = padding.top.toString();\r\n            css.paddingRight = padding.right.toString();\r\n            css.paddingLeft = padding.left.toString();\r\n            css.paddingBottom = padding.bottom.toString();\r\n        }\r\n\r\n        return css;\r\n    };\r\n\r\n    return Padding;\r\n});\r\n\ndefine('skylark-graphics-layout/PositionMode',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var PositionMode = [\"absolute\", \"fixed\", \"relative\", \"static\"];\r\n\r\n    langx.mixin(PositionMode,{\r\n    \t\"absolute\" : 0, \r\n    \t\"fixed\" : 1, \r\n    \t\"relative\" : 2, \r\n    \t\"static\" : 3\r\n    });\r\n\r\n    return layout.PositionMode = PositionMode;\r\n});\r\n\ndefine('skylark-graphics-layout/Restriction',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var Restriction = langx.klass({\r\n        \"klassName\": \"Restriction\",\r\n\r\n\r\n        \"maxHeight\": {\r\n            get : function() {\r\n                return this._.maxHeight;\r\n            }\r\n        },\r\n        \"maxWidth\": {\r\n            get : function() {\r\n                return this._.maxWidth;\r\n            }\r\n        },\r\n        \"minHeight\": {\r\n            get : function() {\r\n                return this._.minHeight;\r\n            }\r\n        },\r\n        \"minWidth\": {\r\n            get : function() {\r\n                return this._.minWidth;\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Restriction.toCss(this,css);\r\n        },\r\n       toString: function(){\r\n            var minWidth  = this.minWidth,\r\n                minHeight = this.minHeight,\r\n                maxWidth = this.maxWidth,\r\n                maxHeight = this.maxHeight;\r\n               \r\n            return minWidth.toString() + \" \" + \r\n                   minHeight.toString() + \" \" +\r\n                   maxWidth.toString() + \" \" + \r\n                   maxHeight.toString();\r\n        },\r\n        \"_consturct\" :   function(minWidth, minHeight,maxWidth, maxHeight) {\r\n            this._ = {\r\n                \"minWidth\": minWidth,\r\n                \"minHeight\": minHeight,\r\n                \"maxWidth\": maxWidth,\r\n                \"maxHeight\": maxHeight\r\n            };\r\n        }\r\n\r\n    });\r\n\r\n\tRestriction.fromString = function(s) {\r\n\t\tvar a = s.split(\" \");\r\n        return Restriction.fromArray(a);\r\n\t};\r\n\r\n\tRestriction.fromPlain = function(o) {\r\n        var minWidth = o.minWidth,\r\n            minHeight = o.minHeight,\r\n            maxWidth = o.maxWidth,\r\n            maxHeight = o.maxHeight;\r\n        minWidth = minWidth ? minWidth : MeasureValue.none;\r\n        minHeight = minHeight ? minHeight : MeasureValue.none;\r\n        maxWidth = maxWidth ? maxWidth : MeasureValue.none;\r\n        maxHeight = maxHeight ? maxHeight : MeasureValue.none;\r\n\r\n\t\treturn new Restriction(minWidth, minHeight,maxWidth, maxHeight);\r\n\t};\r\n\r\n\tRestriction.fromArray = function(a) {\r\n\t\treturn new Restriction(a.length>0?a[0]:MeasureValue.none,\r\n                               a.length>1?a[1]:MeasureValue.none,\r\n                               a.length>2?a[2]:MeasureValue.none,\r\n                               a.length>3?a[3]:MeasureValue.none\r\n                    );\r\n\t};\r\n\r\n    Restriction.fromCss = function(css) {\r\n        return Restriction.fromPlain(css);\r\n    };\r\n    Restriction.toCss = function(restriction,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (restriction) {\r\n            var maxWidth = restriction.maxWidth,\r\n                maxHeight = restriction.maxHeight,\r\n                minWidth = restriction.minWidth,\r\n                minHeight = restriction.minHeight;\r\n\r\n            if (maxWidth) {\r\n                css.maxWidth = maxWidth.type === MeasureType.none ? \"\" : maxWidth.toString();\r\n            }\r\n            if (maxHeight) {\r\n                css.maxHeight = maxHeight.type === MeasureType.none ? \"\" :maxHeight.toString();\r\n            }\r\n\r\n            if (minWidth) {\r\n                css.minWidth = minWidth.type === MeasureType.none ? \"\" :minWidth.toString();\r\n            }\r\n            if (minHeight) {\r\n                css.minHeight = minHeight.type === MeasureType.none ? \"\" :minHeight.toString();\r\n            }\r\n        }\r\n\r\n        return css;\r\n    };    \r\n\r\n    Restriction.none = new Restriction(\r\n        MeasureValue.none,\r\n        MeasureValue.none,\r\n        MeasureValue.none,\r\n        MeasureValue.none\r\n    );\r\n    return Restriction;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/VertAlign',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar VertAlign = [\"top\",\"center\",\"bottom\",\"stretch\"];\r\n\t\r\n\tlangx.mixin(VertAlign,{\r\n\t\t\"top\" : 0,\r\n\t\t\"center\" : 1,\r\n\t\t\"bottom\" : 2,\r\n\t\t\"stretch\" : 3\r\n\t});\r\n\r\n\treturn Alignment;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/main',[\r\n    \"./layout\",\r\n    \"./AnchorStyle\",\r\n    \"./Bounds\",\r\n    \"./Direction\",\r\n    \"./DisplayMode\",\r\n    \"./FloatMode\",\r\n    \"./Flow\",\r\n    \"./HorzAlign\",\r\n    \"./Location\",\r\n    \"./Margin\",\r\n    \"./Padding\",\r\n    \"./PositionMode\",\r\n    \"./Restriction\",\r\n    \"./Size\",\r\n    \"./VertAlign\"\r\n], function(layout) {\r\n\r\n\treturn layout;\r\n});\ndefine('skylark-graphics-layout', ['skylark-graphics-layout/main'], function (main) { return main; });\n\n"]}