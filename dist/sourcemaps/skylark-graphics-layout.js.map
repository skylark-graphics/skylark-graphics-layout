{"version":3,"sources":["skylark-graphics-layout.js"],"names":["define","skylark","langx","attach","log2","x","n","i","layout","DisplayMode","mixin","none","inline","block","listtem","inlineblock","tableRowGroup","tablecell","tablerow","fromCss","s","toCss","mode","FloatMode","left","right","Flow","klass","klassName","display","get","this","_","float","position","css","_construct","params","fromPlain","o","flow","repeat","toString","numbers","Vector2","y","Object","defineProperties","prototype","width","set","value","height","assign","setScalar","scalar","setX","setY","clone","constructor","copy","v","add","w","undefined","console","warn","addVectors","addScalar","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","rotateAround","center","c","cos","sin","Location","inherit","top","_WIDTHS_R","Margin","bottom","getAll","setAll","Padding","equale","target","toPlain","l","t","r","fromString","match","len","Zero","marginTop","marginRight","marginLeft","marginBottom","margin","MeasureType","auto","initial","mid","percent","unit","MeasureUnit","em","ex","px","pt","pc","cm","mm","in","MeasureValue","mtype","u","notEqual","equal","type","props","fromNumber","units","map","item","getText","concat","indexOf","parseInt","substring","paddingTop","paddingRight","paddingLeft","paddingBottom","padding","PositionMode","absolute","fixed","relative","static","Restriction","maxHeight","maxWidth","minHeight","minWidth","_consturct","split","restriction","Size","init","parseFloat","h","main"],"mappings":"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","file":"../skylark-graphics-layout.js","sourcesContent":["define('skylark-graphics-layout/layout',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\t\r\n\tvar layout =  {\r\n\r\n\t  log2 : function (x) {\r\n\t    var n = 1, i = 0;\r\n\t    while (x > n) {\r\n\t      n <<= 1;\r\n\t      i++;\r\n\t    }\r\n\t    return i;\r\n\t  }\r\n\r\n\t};\r\n\r\n\r\n\treturn skylark.attach(\"graphics.layout\",layout);\r\n});\ndefine('skylark-graphics-layout/DisplayMode',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var DisplayMode = [\"none\", \"inline\", \"block\", \"listtem\", \"inlineblock\", \"tableRowGroup\", \"tablecell\", \"tablerow\"];\r\n\r\n    langx.mixin(DisplayMode,{\r\n        \"none\" : 0, \r\n        \"inline\" : 1, \r\n        \"block\" : 2, \r\n        \"listtem\" : 3, \r\n        \"inlineblock\" :4, \r\n        \"tableRowGroup\" : 5, \r\n        \"tablecell\" : 6, \r\n        \"tablerow\" : 7\r\n    });\r\n\r\n    DisplayMode.fromCss = function(s) {\r\n        switch (s) {\r\n            case \"none\":\r\n                return DisplayMode.none;\r\n            case \"inline\":\r\n                return DisplayMode.inline;\r\n            case \"block\":\r\n                return DisplayMode.block;\r\n            case \"list-item\":\r\n                return DisplayMode.listtem;\r\n            case \"inline-block\":\r\n                return DisplayMode.inlineblock;\r\n            case \"table-cell\":\r\n                return DisplayMode.tablecell;\r\n            case \"table-row\":\r\n                return DisplayMode.tablerow;\r\n            case \"table-row-group\":\r\n                return DisplayMode.tableRowGroup\r\n            default:\r\n                return undefined;\r\n        }\r\n    };\r\n    \r\n    DisplayMode.toCss = function(mode) {\r\n        switch (mode) {\r\n            case DisplayMode.none:\r\n                return \"none\";\r\n            case DisplayMode.inline:\r\n                return \"inline\";\r\n            case DisplayMode.block:\r\n                return \"block\";\r\n            case DisplayMode.listtem:\r\n                return \"list-item\";\r\n            case DisplayMode.inlineblock:\r\n                return \"inline-block\";\r\n            case DisplayMode.tablecell:\r\n                return \"table-cell\";\r\n            case DisplayMode.tablerow:\r\n                return \"table-row\";\r\n            case DisplayMode.tableRowGroup:\r\n                return \"table-row-group\";\r\n            default:\r\n                return undefined;\r\n        }\r\n    };\r\n\r\n    return layout.DisplayMode = DisplayMode;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/FloatMode',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar FloatMode = [\"none\", \"left\", \"right\"];\r\n\r\n\tlangx.mixin(FloatMode,{\r\n\t\t\"none\" : 0, \r\n\t\t\"left\" : 1, \r\n\t\t\"right\" : 2\r\n\t});\r\n\r\n\r\n\treturn layout.FloatMode = FloatMode;\r\n});\r\n\ndefine('skylark-graphics-layout/Flow',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar Flow = langx.klass({\r\n\t\t\r\n\t\t\"klassName\"\t:\t\"Flow\",\r\n\r\n\t\t\"display\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.display;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"float\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.float;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"position\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.position;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoCss : function(css) {\r\n\t\t\treturn Flow.toCss(this,css);\r\n\t\t},\r\n\t\t\r\n\t\t\"_construct\" : function(params){\r\n\t\t\tthis._ = {\r\n\t\t\t\tdisplay   : params.display,\r\n\t\t\t\tfloat \t  : params.float,\r\n\t\t\t\tposition  : params.position\r\n\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tFlow.fromPlain = function(o) {\r\n\t\treturn new Flow({\r\n\t\t\tdisplay  : o.display,\r\n\t\t\tfloat    : o.float,\r\n\t\t\tposition : o.position\r\n\t\t});\r\n\t};\r\n\r\n\tFlow.fromCss = Flow.fromPlain;\r\n\r\n\tFlow.toCss = function(flow,css) {\r\n        if (!css) {\r\n        \tcss = {};\r\n        }\r\n    \tif (flow.display) {\r\n        \tcss.display = DisplayMode.toCss(flow.display);\r\n    \t}\r\n    \tif (flow.repeat) {\r\n        \tcss.float = flow.float.toString();\r\n    \t}\r\n    \tif (flow.position) {\r\n        \tcss.position = flow.position.toString();\r\n    \t}\r\n\r\n        return css;\r\n\t};\r\n\r\n\treturn layout.Flow = Flow;\r\n\t\r\n});\t\r\n\ndefine('skylark-langx-numbers/Vector2',[\r\n\t\"./numbers\"\r\n] ,function(numbers) {\r\n\r\n\r\n\tfunction Vector2( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function ( minVal, maxVal ) {\r\n\r\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\r\n\treturn numbers.Vector2 = Vector2 ;\r\n});\r\n\ndefine('skylark-graphics-layout/Location',[\r\n    \"skylark-langx/langx\",\r\n\t\"skylark-langx-numbers/Vector2\",    \r\n    \"./layout\"\r\n],function(langx, Vector2,layout) {\r\n\r\n    var Location =  Vector2.inherit({\r\n\r\n        \"klassName\": \"Location\",\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this.x;\r\n            },\r\n\r\n            set : function(v) {\r\n            \tthis.x = v;\r\n            }\r\n\r\n        },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this.y;\r\n            },\r\n\r\n            set : function(v) {\r\n            \tthis.y = v;\r\n            }\r\n\r\n        }\r\n\t});\r\n\r\n\treturn layout.Location = Location;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/Margin',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d*\\D*\\s*/g;\r\n\r\n    var Margin = langx.klass({\r\n\r\n        \"klassName\": \"Margin\",\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this._.left;\r\n            }\r\n       },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this._.top;\r\n            }\r\n        },\r\n\r\n        \"right\": {\r\n            get : function() {\r\n                return this._.right;\r\n            }\r\n        },\r\n\r\n        \"bottom\": {\r\n            get : function() {\r\n                return this._.bottom;\r\n            }\r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._ = {\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            };\r\n        },\r\n        \r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new Padding(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"top\"  : this.top,\r\n                \"right\"  : this.right,\r\n                \"left\"  : this.left,\r\n                \"bottom\"  : this.bottom\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Padding.toCss(this,css);\r\n        },\r\n\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.left.toString(),\r\n                t = this.top.toString(),\r\n                r = this.right.toString(),\r\n                b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n        \r\n        \"_construct\"    :   function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l === undefined) {\r\n                    if (r === undefined) {\r\n                        if (t === undefined) {\r\n                            //()\r\n                            b=l=r=t=0;\r\n                        } else {\r\n                            // /*Number*/a\r\n                            b=l=r=t;\r\n                        }\r\n                    } else {\r\n                        // /*Number*/tb,/*Number*/lr\r\n                        b = t;\r\n                        l = r;\r\n                    }\r\n\r\n                } else {\r\n                    // /*Number*/t,/*Number*/lr,/*Number*/b \r\n                    b = l;\r\n                    l = r;\r\n                } \r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    Object.mixin(Margin, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new Margin(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new Margin(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new Margin(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a.length;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n            }\r\n            return new Margin(t,r,l,b);\r\n        },\r\n\r\n        Zero: new Margin(0)\r\n    });\r\n\r\n    Margin.fromCss = function(css) {\r\n       return new Margin(\r\n                    css.marginTop,\r\n                    css.marginRight,\r\n                    css.marginLeft,\r\n                    css.marginBottom\r\n                );\r\n    };\r\n\r\n    Margin.toCss = function(margin,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        css.marginTop = margin.top.toString();\r\n        css.marginRight = margin.right.toString();\r\n        css.marginLeft = margin.left.toString();\r\n        css.marginBottom = margin.bottom.toString();\r\n\r\n        return css;\r\n    };\r\n\r\n\r\n    return Margin;\r\n});\r\n\ndefine('skylark-graphics-layout/MeasureType',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar MeasureType = [\"auto\",\"inherit\",\"initial\",\"mid\",\"min\",\"max\",\"none\",\"percent\",\"unit\"];\r\n\t\r\n\tlangx.mixin(MeasureType,{\r\n\t\t\"auto\" : 0,\r\n\t\t\"inherit\" : 1,\r\n\t\t\"initial\" : 2,\r\n\t\t\"mid\" : 3,\r\n\t\t\"min\" : 4,\r\n\t\t\"max\" : 5,\r\n\t\t\"none\" : 6,\r\n\t\t\"percent\" : 7,\r\n\t\t\"unit\" : 8\r\n\t});\r\n\r\n\treturn layout.MeasureType = MeasureType;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/MeasureUnit',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n\tvar MeasureUnit = [\"em\", \"ex\", \"px\", \"pt\", \"pc\", \"cm\", \"mm\", \"in\"];\r\n\r\n\tlangx.mixin(MeasureUnit,{\r\n\t\t\"em\" : 0, \r\n\t\t\"ex\" : 1, \r\n\t\t\"px\" : 2, \r\n\t\t\"pt\" : 3, \r\n\t\t\"pc\" : 4, \r\n\t\t\"cm\" : 5, \r\n\t\t\"mm\" : 6, \r\n\t\t\"in\" : 7\r\n\t});\r\n\r\n\treturn layout.MeasureUnit = MeasureUnit;\r\n\r\n});\r\n\ndefine('skylark-graphics-layout/MeasureValue',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\",\r\n\t\"./MeasureType\",\r\n\t\"./MeasureUnit\"\r\n],function(langx,layout,MeasureType,MeasureUnit) {\r\n\r\n\tvar MeasureValue = langx.klass({\r\n\t\t\"klassName\"\t:\t\"MeasureValue\",\r\n\r\n\t\t\"mtype\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.mtype;\r\n\t\t\t},\r\n\t\t\tset : function(t) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t_.mtype = t;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.auto :\r\n\t\t\t\t\t\t_.unit = null;\r\n\t\t\t\t\t\t_.value = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\t\t_.unit = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"unit\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.unit;\r\n\t\t\t},\r\n\r\n\t\t\tset : function(u) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.mtype;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\t\t_.unit = u;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"value\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.value;\r\n\t\t\t},\r\n\t\t\tset : function(v) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.mtype;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\t\t_.value = v;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new MeasureValue(_.mtype,_.unit,_.value);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*Measure*/m) {\r\n\t\t\treturn !m || m.mtype != this.mtype || m.unit != this.unit || m.value != this.value;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Measure*/m){\r\n\t\t\treturn  !this.notEqual(m);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(){\r\n\t\t\tswitch (this.mtype) {\r\n\t\t\t\tcase MeasureType.auto :\r\n\t\t\t\tcase MeasureType.min :\r\n\t\t\t\tcase MeasureType.max :\r\n\t\t\t\tcase MeasureType.mid :\r\n\t\t\t\t\treturn this.mtype.toString();\r\n\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\treturn this.value + this.unit.toString();\r\n\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\treturn this.value + \"%\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\t\r\n\t\t\r\n\t\t\"_construct\"\t: function(type,value,unit){\r\n\t\t\tvar props = {};\r\n\t\t\tif (type != undefined) {\r\n\t\t\t\tprops.mtype = type;\r\n\t\t\t}\r\n\t\t\tif (value != undefined) {\r\n\t\t\t\tprops.value = value;\r\n\t\t\t}\r\n\t\t\tif (unit != undefined) {\r\n\t\t\t\tprops.unit = unit;\r\n\t\t\t}\r\n\t\t\tthis._ = props;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tMeasureValue.fromNumber = function(n) {\r\n        return new MeasureValue(MeasureType.unit,n,MeasureUnit.px);\r\n\t};\r\n\t\r\n\tMeasureValue.fromString = function(s) {\r\n\t\tif (s==\"auto\"){\r\n\t\t\treturn MeasureValue.auto;\r\n\t\t}\r\n\r\n\t\tif (s==\"min\"){\r\n\t\t\treturn MeasureValue.min;\r\n\t\t}\r\n\r\n\t\tif (s==\"max\"){\r\n\t\t\treturn MeasureValue.max;\r\n\t\t}\r\n\r\n\t\tif (s==\"mid\"){\r\n\t\t\treturn MeasureValue.mid;\r\n\t\t}\r\n\r\n\t\tvar units = MeasureUnit.map(function(item){\r\n\t\t\t\treturn item.getText();\r\n\t\t\t}).concat(\"%\"),\r\n\t\t\ttype,\r\n\t\t\tvalue,\r\n\t\t\tunit;\r\n        for (var i = 0; i < units.length; i++) {\r\n            if (s.indexOf(units[i]) != -1) {\r\n                value = parseInt(s.substring(0, s.length - units[i].length),10);\r\n                if (units[i] == \"%\") {\r\n                \ttype = MeasureType.percent;\r\n                } else {\r\n                \ttype = MeasureType.unit;\r\n                \tunit = MeasureUnit.fromString(units[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return new MeasureValue(type,value,unit);\r\n\t};\r\n\r\n\tMeasureValue.fromPlain = function(o) {\r\n\t\treturn new MeasureValue(o.mtype,o.value,o.unit);\r\n\t};\r\n\r\n\tMeasureValue.fromArray = function(a) {\r\n\t\treturn new MeasureValue(a[0],a.length>1?a[1]:\"undefined\",a.length>1?a[2]:undefined);\r\n\t};\r\n\r\n\tMeasureValue.auto = new MeasureValue(MeasureType.auto);\r\n\tMeasureValue.mid = new MeasureValue(MeasureType.mid);\r\n\tMeasureValue.min = new MeasureValue(MeasureType.min);\r\n\tMeasureValue.max = new MeasureValue(MeasureType.max);\r\n\r\n\treturn layout.MeasureValue = MeasureValue;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/Padding',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d*\\D*\\s*/g;\r\n\r\n    var Padding = langx.klass({\r\n        \"klassName\": \"Padding\",\r\n\r\n\r\n        \"left\": {\r\n            get : function() {\r\n                return this._.left;\r\n            }\r\n       },\r\n\r\n        \"top\": {\r\n            get : function() {\r\n                return this._.top;\r\n            }\r\n        },\r\n\r\n        \"right\": {\r\n            get : function() {\r\n                return this._.right;\r\n            }\r\n        },\r\n\r\n        \"bottom\": {\r\n            get : function() {\r\n                return this._.bottom;\r\n            }\r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._ = {\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            };\r\n        },\r\n        \r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new Padding(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        equale: function(target) {\r\n            return this.left == target.left &&\r\n                this.top == target.top &&\r\n                this.right == target.right &&\r\n                this.bottom == target.bottom;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"top\"  : this.top,\r\n                \"right\"  : this.right,\r\n                \"left\"  : this.left,\r\n                \"bottom\"  : this.bottom\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Padding.toCss(this,css);\r\n        },\r\n\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.left.toString(),\r\n                t = this.top.toString(),\r\n                r = this.right.toString(),\r\n                b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n\r\n        \"_construct\"    :   function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l === undefined) {\r\n                    if (r === undefined) {\r\n                        if (t === undefined) {\r\n                            //()\r\n                            b=l=r=t=0;\r\n                        } else {\r\n                            // /*Number*/a\r\n                            b=l=r=t;\r\n                        }\r\n                    } else {\r\n                        // /*Number*/tb,/*Number*/lr\r\n                        b = t;\r\n                        l = r;\r\n                    }\r\n\r\n                } else {\r\n                    // /*Number*/t,/*Number*/lr,/*Number*/b \r\n                    b = l;\r\n                    l = r;\r\n                } \r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    langx.mixin(Padding, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new Padding(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new Padding(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new Padding(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a.length;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n            }\r\n            return new Padding(t,r,l,b);\r\n        },\r\n\r\n        Zero: new Padding(0)\r\n    });\r\n\r\n    Padding.fromCss = function(css) {\r\n       return new Padding(\r\n                    css.paddingTop,\r\n                    css.paddingRight,\r\n                    css.paddingLeft,\r\n                    css.paddingBottom\r\n                );\r\n    };\r\n\r\n    Padding.toCss = function(padding,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (padding) {\r\n            css.paddingTop = padding.top.toString();\r\n            css.paddingRight = padding.right.toString();\r\n            css.paddingLeft = padding.left.toString();\r\n            css.paddingBottom = padding.bottom.toString();\r\n        }\r\n\r\n        return css;\r\n    };\r\n\r\n    return Padding;\r\n});\r\n\ndefine('skylark-graphics-layout/PositionMode',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var PositionMode = [\"absolute\", \"fixed\", \"relative\", \"static\"];\r\n\r\n    langx.mixin(PositionMode,{\r\n    \t\"absolute\" : 0, \r\n    \t\"fixed\" : 1, \r\n    \t\"relative\" : 2, \r\n    \t\"static\" : 3\r\n    });\r\n\r\n    return layout.PositionMode = PositionMode;\r\n});\r\n\ndefine('skylark-graphics-layout/Restriction',[\r\n    \"skylark-langx/langx\",\r\n    \"./layout\"\r\n],function(langx,layout) {\r\n\r\n    var Restriction = langx.klass({\r\n        \"klassName\": \"Restriction\",\r\n\r\n\r\n        \"maxHeight\": {\r\n            get : function() {\r\n                return this._.maxHeight;\r\n            }\r\n        },\r\n        \"maxWidth\": {\r\n            get : function() {\r\n                return this._.maxWidth;\r\n            }\r\n        },\r\n        \"minHeight\": {\r\n            get : function() {\r\n                return this._.minHeight;\r\n            }\r\n        },\r\n        \"minWidth\": {\r\n            get : function() {\r\n                return this._.minWidth;\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Restriction.toCss(this,css);\r\n        },\r\n       toString: function(){\r\n            var minWidth  = this.minWidth,\r\n                minHeight = this.minHeight,\r\n                maxWidth = this.maxWidth,\r\n                maxHeight = this.maxHeight;\r\n               \r\n            return minWidth.toString() + \" \" + \r\n                   minHeight.toString() + \" \" +\r\n                   maxWidth.toString() + \" \" + \r\n                   maxHeight.toString();\r\n        },\r\n        \"_consturct\" :   function(minWidth, minHeight,maxWidth, maxHeight) {\r\n            this._ = {\r\n                \"minWidth\": minWidth,\r\n                \"minHeight\": minHeight,\r\n                \"maxWidth\": maxWidth,\r\n                \"maxHeight\": maxHeight\r\n            };\r\n        }\r\n\r\n    });\r\n\r\n\tRestriction.fromString = function(s) {\r\n\t\tvar a = s.split(\" \");\r\n        return Restriction.fromArray(a);\r\n\t};\r\n\r\n\tRestriction.fromPlain = function(o) {\r\n        var minWidth = o.minWidth,\r\n            minHeight = o.minHeight,\r\n            maxWidth = o.maxWidth,\r\n            maxHeight = o.maxHeight;\r\n        minWidth = minWidth ? minWidth : MeasureValue.none;\r\n        minHeight = minHeight ? minHeight : MeasureValue.none;\r\n        maxWidth = maxWidth ? maxWidth : MeasureValue.none;\r\n        maxHeight = maxHeight ? maxHeight : MeasureValue.none;\r\n\r\n\t\treturn new Restriction(minWidth, minHeight,maxWidth, maxHeight);\r\n\t};\r\n\r\n\tRestriction.fromArray = function(a) {\r\n\t\treturn new Restriction(a.length>0?a[0]:MeasureValue.none,\r\n                               a.length>1?a[1]:MeasureValue.none,\r\n                               a.length>2?a[2]:MeasureValue.none,\r\n                               a.length>3?a[3]:MeasureValue.none\r\n                    );\r\n\t};\r\n\r\n    Restriction.fromCss = function(css) {\r\n        return Restriction.fromPlain(css);\r\n    };\r\n    Restriction.toCss = function(restriction,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (restriction) {\r\n            var maxWidth = restriction.maxWidth,\r\n                maxHeight = restriction.maxHeight,\r\n                minWidth = restriction.minWidth,\r\n                minHeight = restriction.minHeight;\r\n\r\n            if (maxWidth) {\r\n                css.maxWidth = maxWidth.type === MeasureType.none ? \"\" : maxWidth.toString();\r\n            }\r\n            if (maxHeight) {\r\n                css.maxHeight = maxHeight.type === MeasureType.none ? \"\" :maxHeight.toString();\r\n            }\r\n\r\n            if (minWidth) {\r\n                css.minWidth = minWidth.type === MeasureType.none ? \"\" :minWidth.toString();\r\n            }\r\n            if (minHeight) {\r\n                css.minHeight = minHeight.type === MeasureType.none ? \"\" :minHeight.toString();\r\n            }\r\n        }\r\n\r\n        return css;\r\n    };    \r\n\r\n    Restriction.none = new Restriction(\r\n        MeasureValue.none,\r\n        MeasureValue.none,\r\n        MeasureValue.none,\r\n        MeasureValue.none\r\n    );\r\n    return Restriction;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/Size',[\r\n    \"skylark-langx/langx\",\r\n\t\"skylark-langx-numbers/Vector2\",    \r\n    \"./layout\"\r\n],function(langx, Vector2,layout) {\r\n\r\n    var Size = Vector2.inherit({\r\n        \"klassName\": \"Size\",\r\n\t\t// width: Number\r\n\t\t//\t\tThe width of the default rectangle, value 100.\r\n\t\t\"width\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.width;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// height: Number\r\n\t\t//\t\tThe height of the default rectangle, value 100.\r\n\t\t\"height\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.height;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Size(_.width,_.height);\r\n\t\t},\r\n\r\n        \"toArray\" : function() {\r\n            return [this.width,this.height];\r\n        },\r\n\r\n        \"toPlain\" : function() {\r\n            return {\r\n                \"width\"  : this.width,\r\n                \"height\"  : this.height\r\n            };\r\n        },\r\n        \"toString\": function() {\r\n        \treturn this.width +\",\" + this.height;\r\n        },\r\n\r\n        \"init\" : function(width,height) {\r\n        \tvar _ = this._ = {};\r\n        \t_.width = width || 0;\r\n        \t_.height = height || 0;\r\n        }\r\n\t});\r\n\t\r\n\tSize.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Size(parseFloat(a[0]),parseFloat(a[1]));\r\n\t};\r\n\r\n\tSize.fromPlain = function(o) {\r\n\t\treturn new Size(o.w || o.width,o.h || o.height);\r\n\t};\r\n\r\n\tSize.fromArray = function(a) {\r\n\t\treturn new Size(a[0],a[1]);\r\n\t};\r\n\r\n\tSize.Zero = new Size(0,0);\r\n\t\r\n\treturn  layout.Size = Size;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-layout/main',[\r\n    \"./layout\",\r\n    \"./DisplayMode\",\r\n    \"./FloatMode\",\r\n    \"./Flow\",\r\n    \"./Location\",\r\n    \"./Margin\",\r\n    \"./MeasureType\",\r\n    \"./MeasureUnit\",\r\n    \"./MeasureValue\",\r\n    \"./Padding\",\r\n    \"./PositionMode\",\r\n    \"./Restriction\",\r\n    \"./Size\"\r\n], function(layout) {\r\n\r\n\treturn layout;\r\n});\ndefine('skylark-graphics-layout', ['skylark-graphics-layout/main'], function (main) { return main; });\n\n"]}