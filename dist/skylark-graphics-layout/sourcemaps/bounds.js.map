{"version":3,"sources":["bounds.js"],"names":["define","langx","layout","Location","Size","Bounds","klass","klassName","bounds","get","_","this","x","y","width","height","radius","leftTop","leftBottom","rightTop","rightBottom","size","move","dx","dy","containPoint","undefined","p","isEmpty","notEqual","r","equal","isIntersect","x2","y2","width2","height2","x1","y1","width1","height1","Math","min","intersect","unite","max","clone","init","fromString","s","a","split","parseFloat","fromPlain","o","l","t","w","h","fromArray","Zero"],"mappings":"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","file":"../bounds.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./layout\",\r\n    \"./location\",\r\n    \"./size\"\r\n],function(langx,layout,Location,Size) {\r\n\r\n    var Bounds = langx.klass({\r\n        \"klassName\": \"Bounds\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n                var \r\n                    _ = this._,\r\n                    box = {\r\n                    x: _.x,\r\n                    y: this.y,\r\n                    width: _.width,\r\n                    height: _.height\r\n                };\r\n                return box;\r\n            }\r\n        },\r\n       \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n        // width: Number\r\n        //\t\tThe width of the default rectangle, value 100.\r\n        \"width\": {\r\n            get : function() {\r\n                return this._.width;\r\n            }\r\n        },\r\n        // height: Number\r\n        //\t\tThe height of the default rectangle, value 100.\r\n        \"height\": {\r\n            get : function() {\r\n                return this._.height;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe corner radius for the default rectangle, value 0.\r\n        \"radius\": {\r\n            get : function() {\r\n                return this._.radius;\r\n            }\r\n        },\r\n        \"leftTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Location(_.x, _.y);\r\n            }\r\n        },\r\n        \"leftBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Location(_.x, _.y + _.height);\r\n            }\r\n        },\r\n        \"rightTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Location(_.x + _.width, _.y);\r\n            }\r\n        },\r\n        \"rightBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Location(_.x + _.width, _.y + _.height);\r\n            }\r\n        },\r\n\r\n        \"size\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Size(_.width, _.height);\r\n            }\r\n        },\r\n\r\n        \"move\": function(dx, dy) {\r\n            var _ = this._;\r\n            return new Bounds(_.x + dx,_.y + dy,_.width,_.height,_.radius);\r\n        },\r\n\r\n        \"containPoint\": function(x,y) {\r\n            // support function(p)\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\r\n            return (x >= _.x) && (x < _.x + _.width) && (y >= _.y) && (y < _.y + _.height);\r\n        },\r\n\r\n\t\t\"isEmpty\"\t:\tfunction(){\r\n\t\t\treturn this.width <=0 || this.height<=0;\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*Bounds*/r) {\r\n\t\t\treturn !r || r.x != this.x || r.y != this.y || r.width != this.width || r.height != this.height || r.radius != this.radius;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Bounds*/r){\r\n\t\t\treturn  !this.notEqual(r);\r\n\t\t},\r\n\t\t\r\n\t\t\"isIntersect\"\t:function(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t    return (Math.min(x1 + width1, x2 + width2) - (x1 > x2 ? x1 : x2)) > 0 &&\r\n\t\t           (Math.min(y1 + height1, y2 + height2) - (y1 > y2 ? y1 : y2)) > 0;\r\n\t\t},\r\n\t\t\r\n\t\t\"intersect\"\t:\tfunction(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t    return (Math.min(x1 + width1, x2 + width2) - (x1 > x2 ? x1 : x2)) > 0 &&\r\n\t\t           (Math.min(y1 + height1, y2 + height2) - (y1 > y2 ? y1 : y2)) > 0;\r\n\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\"unite\"\t: function(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t\tvar x = x1 < x2 ? x1 : x2,\r\n\t\t\t\ty = y1 < y2 ? y1 : y2,\r\n\t\t\t\twidth  = Math.max(x1 + width1, x2 + width2) - x;\r\n\t\t\t\theight = Math.max(y1 + height1, y2 + height2) - y;\r\n\t\t    \r\n\t\t    return new Bounds(x,y,width,height);\r\n\t\t},\r\n\t\t\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Bounds(_.x,_.y,_.width,_.height,_.radius);\r\n\t\t},\r\n\r\n        \"init\" : function(x, y, width, height, radius) {\r\n            var _ = this._ = {};\r\n            _.x = x || 0;\r\n            _.y = y || 0;\r\n            _.width = width || 0;\r\n            _.height = height || 0;\r\n            _.radius = radius || 0;\r\n        }\r\n    });\r\n\r\n\r\n\tBounds.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Bounds(parseFloat(a[0]),parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));\r\n\t};\r\n\r\n\tBounds.fromPlain = function(o) {\r\n\t\treturn new Bounds(o.x || o.l,o.y || o.t, o.w || o.width,o.h || o.height);\r\n\t};\r\n\r\n\tBounds.fromArray = function(a) {\r\n\t\treturn new Bounds(a[0],a[1],a[2],a[3]);\r\n\t};\r\n\t\r\n\tBounds.Zero = new Bounds(0,0,0,0);\r\n\t\r\n\r\n\treturn layout.Bounds = Bounds;\r\n\t\r\n});\t\r\n"]}