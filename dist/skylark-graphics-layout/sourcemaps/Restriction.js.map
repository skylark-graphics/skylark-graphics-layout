{"version":3,"sources":["Restriction.js"],"names":["define","langx","MeasureValue","layout","Restriction","klass","klassName","maxHeight","get","this","_","maxWidth","minHeight","minWidth","toCss","css","toString","_consturct","fromString","s","a","split","fromArray","fromPlain","o","none","length","fromCss","restriction","type","MeasureType"],"mappings":";;;;;;;AAAAA,QACI,sBACA,sCACA,YACF,SAASC,EAAMC,EAAaC,GAE1B,IAAIC,EAAcH,EAAMI,OACpBC,UAAa,cAGbC,WACIC,IAAM,WACF,OAAOC,KAAKC,EAAEH,YAGtBI,UACIH,IAAM,WACF,OAAOC,KAAKC,EAAEC,WAGtBC,WACIJ,IAAM,WACF,OAAOC,KAAKC,EAAEE,YAGtBC,UACIL,IAAM,WACF,OAAOC,KAAKC,EAAEG,WAItBC,MAAQ,SAASC,GACb,OAAOX,EAAYU,MAAML,KAAKM,IAEnCC,SAAU,WACL,IAAIH,EAAYJ,KAAKI,SACjBD,EAAYH,KAAKG,UACjBD,EAAWF,KAAKE,SAChBJ,EAAYE,KAAKF,UAErB,OAAOM,EAASG,WAAa,IACtBJ,EAAUI,WAAa,IACvBL,EAASK,WAAa,IACtBT,EAAUS,YAErBC,WAAiB,SAASJ,EAAUD,EAAUD,EAAUJ,GACpDE,KAAKC,GACDG,SAAYA,EACZD,UAAaA,EACbD,SAAYA,EACZJ,UAAaA,MAqEzB,OA/DAH,EAAYc,WAAa,SAASC,GAC9B,IAAIC,EAAID,EAAEE,MAAM,KAChB,OAAOjB,EAAYkB,UAAUF,IAGjChB,EAAYmB,UAAY,SAASC,GAC7B,IAAIX,EAAWW,EAAEX,SACbD,EAAYY,EAAEZ,UACdD,EAAWa,EAAEb,SACbJ,EAAYiB,EAAEjB,UAMlB,OALAM,EAAWA,GAAsBX,EAAauB,KAC9Cb,EAAYA,GAAwBV,EAAauB,KACjDd,EAAWA,GAAsBT,EAAauB,KAC9ClB,EAAYA,GAAwBL,EAAauB,KAE1C,IAAIrB,EAAYS,EAAUD,EAAUD,EAAUJ,IAGzDH,EAAYkB,UAAY,SAASF,GAC7B,OAAO,IAAIhB,EAAYgB,EAAEM,OAAO,EAAEN,EAAE,GAAGlB,EAAauB,KAC7BL,EAAEM,OAAO,EAAEN,EAAE,GAAGlB,EAAauB,KAC7BL,EAAEM,OAAO,EAAEN,EAAE,GAAGlB,EAAauB,KAC7BL,EAAEM,OAAO,EAAEN,EAAE,GAAGlB,EAAauB,OAIxDrB,EAAYuB,QAAU,SAASZ,GAC3B,OAAOX,EAAYmB,UAAUR,IAEjCX,EAAYU,MAAQ,SAASc,EAAYb,GAIrC,GAHKA,IACDA,MAEAa,EAAa,CACb,IAAIjB,EAAWiB,EAAYjB,SACvBJ,EAAYqB,EAAYrB,UACxBM,EAAWe,EAAYf,SACvBD,EAAYgB,EAAYhB,UAExBD,IACAI,EAAIJ,SAAWA,EAASkB,OAASC,YAAYL,KAAO,GAAKd,EAASK,YAElET,IACAQ,EAAIR,UAAYA,EAAUsB,OAASC,YAAYL,KAAO,GAAIlB,EAAUS,YAGpEH,IACAE,EAAIF,SAAWA,EAASgB,OAASC,YAAYL,KAAO,GAAIZ,EAASG,YAEjEJ,IACAG,EAAIH,UAAYA,EAAUiB,OAASC,YAAYL,KAAO,GAAIb,EAAUI,YAI5E,OAAOD,GAGXX,EAAYqB,KAAO,IAAIrB,EACnBF,EAAauB,KACbvB,EAAauB,KACbvB,EAAauB,KACbvB,EAAauB,MAEVrB","file":"../Restriction.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-langx-measures/MeasureValue\",\r\n    \"./layout\"\r\n],function(langx,MeasureValue,layout) {\r\n\r\n    var Restriction = langx.klass({\r\n        \"klassName\": \"Restriction\",\r\n\r\n\r\n        \"maxHeight\": {\r\n            get : function() {\r\n                return this._.maxHeight;\r\n            }\r\n        },\r\n        \"maxWidth\": {\r\n            get : function() {\r\n                return this._.maxWidth;\r\n            }\r\n        },\r\n        \"minHeight\": {\r\n            get : function() {\r\n                return this._.minHeight;\r\n            }\r\n        },\r\n        \"minWidth\": {\r\n            get : function() {\r\n                return this._.minWidth;\r\n            }\r\n        },\r\n\r\n        toCss : function(css) {\r\n            return Restriction.toCss(this,css);\r\n        },\r\n       toString: function(){\r\n            var minWidth  = this.minWidth,\r\n                minHeight = this.minHeight,\r\n                maxWidth = this.maxWidth,\r\n                maxHeight = this.maxHeight;\r\n               \r\n            return minWidth.toString() + \" \" + \r\n                   minHeight.toString() + \" \" +\r\n                   maxWidth.toString() + \" \" + \r\n                   maxHeight.toString();\r\n        },\r\n        \"_consturct\" :   function(minWidth, minHeight,maxWidth, maxHeight) {\r\n            this._ = {\r\n                \"minWidth\": minWidth,\r\n                \"minHeight\": minHeight,\r\n                \"maxWidth\": maxWidth,\r\n                \"maxHeight\": maxHeight\r\n            };\r\n        }\r\n\r\n    });\r\n\r\n    Restriction.fromString = function(s) {\r\n        var a = s.split(\" \");\r\n        return Restriction.fromArray(a);\r\n    };\r\n\r\n    Restriction.fromPlain = function(o) {\r\n        var minWidth = o.minWidth,\r\n            minHeight = o.minHeight,\r\n            maxWidth = o.maxWidth,\r\n            maxHeight = o.maxHeight;\r\n        minWidth = minWidth ? minWidth : MeasureValue.none;\r\n        minHeight = minHeight ? minHeight : MeasureValue.none;\r\n        maxWidth = maxWidth ? maxWidth : MeasureValue.none;\r\n        maxHeight = maxHeight ? maxHeight : MeasureValue.none;\r\n\r\n        return new Restriction(minWidth, minHeight,maxWidth, maxHeight);\r\n    };\r\n\r\n    Restriction.fromArray = function(a) {\r\n        return new Restriction(a.length>0?a[0]:MeasureValue.none,\r\n                               a.length>1?a[1]:MeasureValue.none,\r\n                               a.length>2?a[2]:MeasureValue.none,\r\n                               a.length>3?a[3]:MeasureValue.none\r\n                    );\r\n    };\r\n\r\n    Restriction.fromCss = function(css) {\r\n        return Restriction.fromPlain(css);\r\n    };\r\n    Restriction.toCss = function(restriction,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (restriction) {\r\n            var maxWidth = restriction.maxWidth,\r\n                maxHeight = restriction.maxHeight,\r\n                minWidth = restriction.minWidth,\r\n                minHeight = restriction.minHeight;\r\n\r\n            if (maxWidth) {\r\n                css.maxWidth = maxWidth.type === MeasureType.none ? \"\" : maxWidth.toString();\r\n            }\r\n            if (maxHeight) {\r\n                css.maxHeight = maxHeight.type === MeasureType.none ? \"\" :maxHeight.toString();\r\n            }\r\n\r\n            if (minWidth) {\r\n                css.minWidth = minWidth.type === MeasureType.none ? \"\" :minWidth.toString();\r\n            }\r\n            if (minHeight) {\r\n                css.minHeight = minHeight.type === MeasureType.none ? \"\" :minHeight.toString();\r\n            }\r\n        }\r\n\r\n        return css;\r\n    };    \r\n\r\n    Restriction.none = new Restriction(\r\n        MeasureValue.none,\r\n        MeasureValue.none,\r\n        MeasureValue.none,\r\n        MeasureValue.none\r\n    );\r\n    return Restriction;\r\n    \r\n}); \r\n"]}